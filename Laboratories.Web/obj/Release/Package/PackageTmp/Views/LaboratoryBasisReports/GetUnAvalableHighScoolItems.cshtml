@using PagedList.Mvc;
@model PagedList.IPagedList<Laboratories.Domain.Item>

@{
    ViewBag.Title = Laboratories.Web.Resources.General.laboratorybasis;
}

<hr />
<hr />
<h2 align="center" class="panel-title ">
    <strong style="text-align:center;color:darkblue">@Laboratories.Web.Resources.General.laboratorybasis </strong>
</h2>

<p>
    @Html.ActionLink(@Laboratories.Web.Resources.General.download, "DownloadUnAvalableHighScoolItems", "LaboratoryBasisReports", null, new { @class = "btn btn-info" })

</p>
<hr />
<hr />
<div class="table-responsive">
    <table class="table table-striped jambo_table bulk_action">
        <thead>
            <tr>

                <th>
                    @Laboratories.Web.Resources.Item.itm_code
                </th>
                <th>
                    @Laboratories.Web.Resources.General.arName
                </th>
                <th>
                    @Laboratories.Web.Resources.General.enName
                </th>
                <th>
                    @Laboratories.Web.Resources.Item.itm_type
                </th>
                <th>
                    @Laboratories.Web.Resources.Item.itm_sugQty
                </th>
                <th>
                    @Laboratories.Web.Resources.Item.itm_presentQty
                </th>
                <th>
                    @Laboratories.Web.Resources.Item.itm_unit
                </th>

                @*<th>
                        @Laboratories.Web.Resources.Item.itm_chapter
                    </th>
                    <th>
                        @Laboratories.Web.Resources.Item.itm_department
                    </th>
                    <th>
                        @Laboratories.Web.Resources.Item.itm_level
                    </th>*@

                @*
                    <th>
                        @Html.DisplayNameFor(model => model.itm_availableMethod)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.itm_isExisting)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.itm_presentQty)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.itm_desc)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.itm_term)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.itm_School.sch_arName)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.AddedDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ModifiedDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AddedBy)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ModifiedBy)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.IsAvtive)
                    </th>*@
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.itm_code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.itm_arName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.itm_enName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.itm_type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.itm_sugQty)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.itm_presentQty)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.itm_Unit.unt_arName)
                    </td>


                </tr>
            }
        </tbody>


    </table>
</div>
    <br />
    <!--Code to show curent page and page number-->
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("GetUnAvalableHighScoolItemsPhysics",
        new { page }))
